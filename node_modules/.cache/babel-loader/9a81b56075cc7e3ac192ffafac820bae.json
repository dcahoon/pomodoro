{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\CODE\\\\0-Notes\\\\module-files\\\\27_pomodoro-timer\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\SessionView.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\";\n\nfunction SessionView({\n  session,\n  focusDuration,\n  breakDuration,\n  isTimerRunning\n}) {\n  if (session) {\n    // Calculate the percentage complete to render the progress bar\n    let percent = 0;\n\n    if (session !== null) {\n      session.label === \"Focusing\" ? percent = (1 - session.timeRemaining / (focusDuration * 60)) * 100 : percent = (1 - session.timeRemaining / (breakDuration * 60)) * 100;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }, session.label, \" for \", session.label === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, secondsToDuration(session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": percent,\n      style: {\n        width: `${percent}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, isTimerRunning ? null : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 50\n      }\n    }, \"Plaused\"))));\n  } else {\n    return null;\n  }\n}\n\nexport default SessionView;","map":{"version":3,"sources":["C:/Users/dylan/CODE/0-Notes/module-files/27_pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SessionView.js"],"names":["React","secondsToDuration","minutesToDuration","SessionView","session","focusDuration","breakDuration","isTimerRunning","percent","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA,aAA1B;AAAyCC,EAAAA;AAAzC,CAArB,EAAgF;AAG5E,MAAIH,OAAJ,EAAa;AACT;AACA,QAAII,OAAO,GAAG,CAAd;;AACA,QAAIJ,OAAO,KAAK,IAAhB,EAAsB;AAClBA,MAAAA,OAAO,CAACK,KAAR,KAAkB,UAAlB,GACMD,OAAO,GAAG,CAAC,IAAKJ,OAAO,CAACM,aAAR,IAAyBL,aAAa,GAAG,EAAzC,CAAN,IAAuD,GADvE,GAEMG,OAAO,GAAG,CAAC,IAAKJ,OAAO,CAACM,aAAR,IAAyBJ,aAAa,GAAG,EAAzC,CAAN,IAAuD,GAFvE;AAGH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,OAAO,CAACK,KADb,WACyBL,OAAO,CAACK,KAAR,KAAkB,UAAlB,GAA+BP,iBAAiB,CAACG,aAAD,CAAhD,GAAkEH,iBAAiB,CAACI,aAAD,CAD5G,aAFJ,eAMI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,iBAAiB,CAACG,OAAO,CAACM,aAAT,CADtB,eANJ,CADJ,CADJ,eAaI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,cADd;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,uBAAc,GAHlB;AAII,uBAAc,KAJlB;AAKI,uBAAeH,OALnB;AAMI,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAG,GAAEJ,OAAQ;AAApB,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAbJ,eA2BI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,cAAc,GAAG,IAAH,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD7B,CADJ,CA3BJ,CADJ;AAmCH,GA5CD,MA4CO;AACH,WAAO,IAAP;AACH;AAEJ;;AAED,eAAeJ,WAAf","sourcesContent":["import React from \"react\"\r\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration\"\r\n\r\nfunction SessionView({ session, focusDuration, breakDuration, isTimerRunning }) {\r\n\r\n    \r\n    if (session) {   \r\n        // Calculate the percentage complete to render the progress bar\r\n        let percent = 0\r\n        if (session !== null) {\r\n            session.label === \"Focusing\" \r\n                ? percent = (1 - (session.timeRemaining / (focusDuration * 60))) * 100\r\n                : percent = (1 - (session.timeRemaining / (breakDuration * 60))) * 100\r\n        }\r\n        \r\n        return (\r\n            <div>     \r\n                <div className=\"row mb-2\">       \r\n                    <div className=\"col\">\r\n                        {/* Update message below to include current session (Focusing or On Break) total duration */}\r\n                        <h2 data-testid=\"session-title\">\r\n                            {session.label} for {session.label === \"Focusing\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration)} minutes\r\n                        </h2>\r\n                        {/* Update message below correctly format the time remaining in the current session */}\r\n                        <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                            {secondsToDuration(session.timeRemaining)} remaining\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col\">\r\n                        <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                            <div\r\n                                className=\"progress-bar\"\r\n                                role=\"progressbar\"\r\n                                aria-valuemin=\"0\"\r\n                                aria-valuemax=\"100\"\r\n                                aria-valuenow={percent}\r\n                                style={{ width: `${percent}%` }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col\">\r\n                        {isTimerRunning ? null : <h2>Plaused</h2>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )   \r\n    } else {\r\n        return null\r\n    }\r\n  \r\n}\r\n\r\nexport default SessionView"]},"metadata":{},"sourceType":"module"}